# This Dockerfile will build an image with decord with gpu support and objective-metrics-package
# Cuda toolkit will be installed inside the container, so you don't need it on the host machine
# But you have to change Cuda toolkit to version that matches your host nvidia driver

FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Moscow

RUN apt-get update && apt-get install -y gcc wget git cmake ffmpeg

# Timezone Moscow
RUN apt-get -y install tzdata
RUN cp /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Install Ffmpeg static build with libvmaf (https://johnvansickle.com/ffmpeg/)
RUN apt-get -y install xz-utils
RUN wget https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz
RUN tar xvf ffmpeg-git-amd64-static.tar.xz
RUN cp -r ffmpeg-git-*-amd64-static/model /usr/local/share/
RUN mv ffmpeg-git-*-amd64-static/ffmpeg ffmpeg-git-*-amd64-static/ffprobe /usr/local/bin/

# <----------- Install CUDA Toolkit 12.0 Update 1 ----------->
RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin
RUN mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600
RUN wget https://developer.download.nvidia.com/compute/cuda/12.0.1/local_installers/cuda-repo-ubuntu2204-12-0-local_12.0.1-525.85.12-1_amd64.deb

RUN dpkg -i cuda-repo-ubuntu2204-12-0-local_12.0.1-525.85.12-1_amd64.deb
RUN cp /var/cuda-repo-ubuntu2204-12-0-local/cuda-*-keyring.gpg /usr/share/keyrings/
RUN apt-get update
RUN apt-get -y install cuda

ENV PATH=/usr/local/cuda-12.0/bin${PATH:+:${PATH}}

RUN rm cuda-repo-ubuntu2204-12-0-local_12.0.1-525.85.12-1_amd64.deb
# <---------------------------------------------------------->

# <----------------- Build Decord with GPU ------------------>
# Install the system packages for building the shared library
RUN apt-get install -y build-essential python3-dev python3-setuptools python3-pip make
RUN apt-get install -y libavcodec-dev libavfilter-dev libavformat-dev libavutil-dev

# Clone the repo
RUN git clone --recursive https://github.com/dmlc/decord

# Build the shared library
WORKDIR /decord
RUN mkdir build
WORKDIR /decord/build
RUN cmake .. -DUSE_CUDA=ON -DCMAKE_BUILD_TYPE=Release
RUN make

# Install python bindings
WORKDIR /decord/python
RUN python3 setup.py install --user
# <---------------------------------------------------------->

# Install objective-metrics package
RUN pip install objective-metrics

# Make a storage
WORKDIR /app

ENTRYPOINT ["objective_metrics_run"]
